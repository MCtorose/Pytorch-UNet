function varargout = photo_gui(varargin)
% PHOTO_GUI MATLAB code for photo_gui.fig
%      PHOTO_GUI, by itself, creates a new PHOTO_GUI or raises the existing
%      singleton*.
%
%      H = PHOTO_GUI returns the handle to a new PHOTO_GUI or the handle to
%      the existing singleton*.
%
%      PHOTO_GUI('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in PHOTO_GUI.M with the given input arguments.
%
%      PHOTO_GUI('Property','Value',...) creates a new PHOTO_GUI or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before photo_gui_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to photo_gui_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help photo_gui

% Last Modified by GUIDE v2.5 07-Sep-2022 11:01:31

% Begin initialization code - DO NOT EDIT

gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @photo_gui_OpeningFcn, ...
                   'gui_OutputFcn',  @photo_gui_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before photo_gui is made visible.
function photo_gui_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to photo_gui (see VARARGIN)
   
% Choose default command line output for photo_gui
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes photo_gui wait for user response (see UIRESUME)
% uiwait(handles.figure_photo_gui);


% --- Outputs from this function are returned to the command line.
function varargout = photo_gui_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --------------------------------------------------------------------
function wen_jian_Callback(hObject, eventdata, handles)
% hObject    handle to wen_jian (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function chu_li_Callback(hObject, eventdata, handles)
% hObject    handle to chu_li (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function zhifangtu_junheng_Callback(hObject, eventdata, handles)
% hObject    handle to zhifangtu_junheng (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    axes(handles.axes2);
    global fpath;
    img_2=imread(fpath);
    img_2=rgb2gray(img_2);
    K=16;
    img_2=histeq(img_2,K);
    imshow(img_2);
    title('÷±∑ΩÕºæ˘∫‚')
    
% --------------------------------------------------------------------
function jiaoyan_zaosheng_Callback(hObject, eventdata, handles)
% hObject    handle to jiaoyan_zaosheng (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user dat);
    axes(handles.axes2);
    global fpath;
    img_2=imread(fpath);
    img_2=rgb2gray(img_2);
    img_2=imnoise(img_2,'salt & pepper',0.06);
    imshow(img_2);
     title('º”»ÎΩ∑—Œ‘Î…˘∫Û')

% --------------------------------------------------------------------
function F_bianhuan_Callback(hObject, eventdata, handles)
% hObject    handle to F_bianhuan (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    axes(handles.axes2);
    global fpath;
    img_2=imread(fpath);
    img_2=rgb2gray(img_2);
    img_2=im2double(img_2);
    img_2=fft2(img_2);
    img_2=fftshift(img_2);
    img_2=abs(img_2);
    img_2=log(img_2+1);
    imshow(img_2,[]);
    title('∏µ¿Ô“∂±‰ªª£®∆µ∆◊Õº£©')
    

% --------------------------------------------------------------------
function xuan_zhuan_Callback(hObject, eventdata, handles)
% hObject    handle to xuan_zhuan (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    axes(handles.axes2);
    global fpath;
    img_2=imread(fpath);
    img_2=rgb2gray(img_2);
    img_2=imrotate(img_2,90,'nearest');
    imshow(img_2);
     title('–˝◊™90∂»')

% --------------------------------------------------------------------
function da_kai_Callback(hObject, eventdata, handles)
% hObject    handle to da_kai (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    [filename,pathname]=uigetfile(...
        {'*.bmp;*.jpg;*.png;*.jpeg','ImageFiles(*.bmp,*.jpg,*.png,*.jpeg)';...
            '*.*','AllFiles(*.*)'},...
            'Pickanimage');
    axes(handles.axes1);
    global fpath;
    fpath=[pathname filename];
    img_1=imread(fpath);
    imshow(img_1);
    

% --------------------------------------------------------------------
function bao_cun_Callback(hObject, eventdata, handles)
% hObject    handle to bao_cun (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    [filename,pathname]=uiputfile({'*.bmp','BMPfiles';'*.jpg;','JPGfiles'},'PickanImage');
        if isequal(filename,0)||isequal(pathname,0)
            return;
        else
            h=getframe(handles.axes2);  
            imwrite(h.cdata,[pathname,filename]);  
        end
      

% --- Executes on button press in bianyuan_jiance.
function bianyuan_jiance_Callback(hObject, eventdata, handles)
% hObject    handle to bianyuan_jiance (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    axes(handles.axes2);
    global fpath;
    img_2=imread(fpath);
    img_2=rgb2gray(img_2);
    img_2=edge(img_2,'canny');
    imshow(img_2,[]);
    title('canny±ﬂ‘µºÏ≤‚')


% --- Executes on button press in hui_du.
function hui_du_Callback(hObject, eventdata, handles)
% hObject    handle to hui_du (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    axes(handles.axes2);
    global fpath;
    img_2=imread(fpath);
    img_2=rgb2gray(img_2);
    imshow(img_2);
     title('ª“∂»Õº')

% --- Executes on button press in gao_si.
function gao_si_Callback(hObject, eventdata, handles)
% hObject    handle to gao_si (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    axes(handles.axes2);
    global fpath;
    img_2=imread(fpath);
    img_2=rgb2gray(img_2);
    img_2=imnoise(img_2,'gaussian');
    imshow(img_2);
    title('º”»Î∏ﬂÀπ')

% --- Executes on button press in er_zhi.
function er_zhi_Callback(hObject, eventdata, handles)
% hObject    handle to er_zhi (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    axes(handles.axes2);
    global fpath;
    img_2=imread(fpath);
    img_2=im2bw(img_2,0.5);
    imshow(img_2);
    title('‰∫åÂ?ºÂåñÂõæÂÉè')


% --- Executes on button press in pushbutton16.
function pushbutton16_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton16 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
 axes(handles.axes2);
    global fpath;
    img_2=imread(fpath);
    img_2=rgb2gray(img_2);
    img_2=imnoise(img_2,'salt & pepper',0.06);
     img_2=im2double(img_2);
    img_2=fft2(img_2);
    img_2=fftshift(img_2);
    img_2=abs(img_2);
    img_2=log(img_2+1);
    imshow(img_2,[]);
    title('ÂÇÖÈáåÂè∂ÂèòÊç¢ÔºàÈ¢ëË∞±ÂõæÔºâ')
    
    
   


% --- Executes on button press in pushbutton17.
function pushbutton17_Callback(hObject, eventdata, handles)
% handles    structure with handles and user data (see GUIDATA)
% hObject    handle to pushbutton17 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
    axes(handles.axes2);
    global fpath;
    img_2=imread(fpath);
    img_2=rgb2gray(img_2);
    img_2=imnoise(img_2,'salt & pepper',0.06);
    img_2=medfilt2(img_2);
    imshow(img_2);
     title('‰∏≠Â?ºÊª§Ê≥¢Âô®')


% --- Executes on button press in junzhi.
function junzhi_Callback(hObject, eventdata, handles)
% hObject    handle to junzhi (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
  axes(handles.axes2);
    global fpath;
    img_2=imread(fpath);
    img_2=rgb2gray(img_2);
    img_2=imnoise(img_2,'gaussian');
   
   [height,width] = size(img_2);
J = img_2;
    conv = zeros(5,5);%È´òÊñØÂç∑ÁßØÊ†?
sigma = 1;%ÊñπÂ∑Æ
sigma_2 = sigma * sigma;%‰∏¥Êó∂ÂèòÈáè
sum = 0;
for i = 1:5
    for j = 1:5
        conv(i,j) = exp((-(i - 3) * (i - 3) - (j - 3) * (j - 3)) / (2 * sigma_2)) / (2 * 3.14 * sigma_2);%È´òÊñØÂÖ¨Âºè
        sum = sum + conv(i,j);
    end
end
conv = conv./sum;%Ê†áÂáÜÂå?

%ÂØπÂõæÂÉèÂÆûÊñΩÈ´òÊñØÊª§Ê≥?
for i = 1:height
    for j = 1:width
        sum = 0;%‰∏¥Êó∂ÂèòÈáè
        for k = 1:5
            for m = 1:5
                if (i - 3 + k) > 0 && (i - 3 + k) <= height && (j - 3 + m) > 0 && (j - 3 + m) < width
                    sum = sum + conv(k,m) * img_2(i - 3 + k,j - 3 + m);
                end
            end
        end
        J(i,j) = sum;
    end
end
imshow(J,[])
title('È´òÊñØÊª§Ê≥¢ÂêéÁöÑÁªìÊûú')


% --- Executes on button press in batewosi.
function batewosi_Callback(hObject, eventdata, handles)
% hObject    handle to batewosi (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
  axes(handles.axes2);
    global fpath;
    img_2=imread(fpath);
    img_2=rgb2gray(img_2);
    img_2=imnoise(img_2,'salt & pepper',0.06);
    img_2=double(img_2);
    img_2=fft2(img_2);
    img_2=fftshift(img_2);
    
    [M,N,~]=size(img_2);
nn=2;
d0=50;
m=floor(M/2);n=floor(N/2);
for i=1:M
for j=1:N
d=sqrt((i-m)^2+(j-n)^2);
h=1/(1+0.414*(d/d0)^(2*nn));
result(i,j)=h*img_2(i,j);
end
end
result=ifftshift(result);
J2=ifft2(result);
J3=uint8(real(J2));
imshow(J3);
title('‰ΩéÈ?öÊª§Ê≥¢Âõæ');

% --- Executes on button press in bian_sobel.
function bian_sobel_Callback(hObject, eventdata, handles)
% hObject    handle to bian_sobel (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    axes(handles.axes2);
    global fpath;
    img_2=imread(fpath);
    img_2=rgb2gray(img_2);
    img_2=edge(img_2,'sobel');
    imshow(img_2,[]);
    title('SobelËæπÁºòÊ£?Êµ?')

% --- Executes on button press in bian_log.
function bian_log_Callback(hObject, eventdata, handles)
% hObject    handle to bian_log (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    axes(handles.axes2);
    global fpath;
    img_2=imread(fpath);
    img_2=rgb2gray(img_2);
    img_2=edge(img_2,'log');
    imshow(img_2,[]);
    title('LogËæπÁºòÊ£?Êµ?')

% --- Executes on button press in bian_roberts.
function bian_roberts_Callback(hObject, eventdata, handles)
% hObject    handle to bian_roberts (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    axes(handles.axes2);
    global fpath;
    img_2=imread(fpath);
    img_2=rgb2gray(img_2);
    img_2=edge(img_2,'roberts');
    imshow(img_2,[]);
    title('RobertsËæπÁºòÊ£?Êµ?')

% --- Executes on button press in bian_prewitt.
function bian_prewitt_Callback(hObject, eventdata, handles)
% hObject    handle to bian_prewitt (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    axes(handles.axes2);
    global fpath;
    img_2=imread(fpath);
    img_2=rgb2gray(img_2);
    img_2=edge(img_2,'prewitt');
    imshow(img_2,[]);
    title('PrewittËæπÁºòÊ£?Êµ?')
